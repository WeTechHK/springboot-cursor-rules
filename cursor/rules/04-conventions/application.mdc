---
description: Spring Boot应用启动类编码规范，包括注解配置、组件扫描、功能启用
globs: **/src/main/java/**/**Application.java
layer: L4
allowedReferences: [L4]
---

# Application 编码约定

## 适用范围
定义Spring Boot应用启动类的实现规范，负责应用启动和功能配置。

## 核心规则

### 强制要求（MUST）
- 必须使用 `@SpringBootApplication` 标记启动类
- 类名格式必须为 `{AppName}Application`
- 必须添加 JavaDoc 注释
- 位置：根包或主包下（`com.{company}.{project}` 包下）
- 必须提供 `main` 方法

### 禁止要求（MUST NOT）
- 禁止使用通用名称 `Application`（必须包含项目名）
- 禁止在启动类中定义@Bean
- 禁止包含业务逻辑

### 可选要求（MAY）
- 可以使用 `@MapperScan` 扫描Mapper接口
- 可以使用 `@EnableTransactionManagement` 启用事务
- 可以使用 `@EnableAspectJAutoProxy` 启用AOP
- 可以使用 `@EnableScheduling` 启用定时任务
- 可以使用 `@EnableAsync` 启用异步
- 可以使用 `@EnableCaching` 启用缓存
- 可以使用 `@EnableConfigurationProperties` 绑定配置类

## 完整代码模板

### 文件结构
- 包声明
- 导入语句
- 类声明
- 方法定义

### 完整实现模板
```java
package com.edu.soop;

import org.mybatis.spring.annotation.MapperScan;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.scheduling.annotation.EnableScheduling;
import org.springframework.transaction.annotation.EnableTransactionManagement;

/**
 * 学生管理系统启动类
 * 负责应用启动和功能配置
 *
 * @author system
 * @since 1.0.0
 */
@SpringBootApplication
@MapperScan("com.edu.soop.mapper")
@EnableTransactionManagement
@EnableScheduling
public class SoopApplication {

    /**
     * 应用启动入口
     *
     * @param args 启动参数
     */
    public static void main(String[] args) {
        SpringApplication.run(SoopApplication.class, args);
    }
}
```

## 规则执行检查清单

### 生成前检查
- [ ] 是否使用了 `@SpringBootApplication` 标记启动类
- [ ] 类名格式是否为 `{AppName}Application`
- [ ] 是否添加了 JavaDoc 注释
- [ ] 是否避免了使用通用名称 `Application`
- [ ] 是否避免了在启动类中定义@Bean

### 生成中检查
- [ ] 是否按照规范定义类
- [ ] 是否包含了必要的注解
- [ ] 是否遵循命名规范
- [ ] 是否避免了禁止的操作

### 生成后检查
- [ ] 是否通过编译检查
- [ ] 是否包含了所有必要的功能
- [ ] 是否符合命名规范
- [ ] 是否满足功能要求

## 相关规则
- Mapper接口: `04-conventions/mapper.mdc`
- 定时任务: `04-conventions/task.mdc`
