---
description: Springboot项目代码结构规范（目录结构与包结构约定），适用于所有 Spring Boot 项目。
globs:
alwaysApply: true
---

# 项目结构和包结构规范

## 目录结构
```
src/
├── main/
│   ├── java/
│   │   └── com/example/app/
│   │       ├── Application.java          # 主入口类
│   │       ├── config/                   # 配置类
│   │       ├── controller/               # REST控制器
│   │       ├── service/                  # 业务逻辑服务
│   │       │   └── impl/                 # 服务实现类
│   │       ├── dao/                      # 数据访问层（MyBatis）
│   │       │   ├── entity/               # 实体类（对应数据库表结构）
│   │       │   └── mapper/               # Mapper接口
│   │       ├── dto/                      # 数据模型（自定义dto）
│   │       ├── vo/                       # 视图对象
│   │       │   ├── request/              # 请求对象
│   │       │   └── response/             # 响应对象
│   │       ├── exception/                # 自定义异常
│   │       ├── task/                     # 定时任务
│   │       ├── util/                     # 工具类
│   │       └── security/                 # 安全相关类
│   └── resources/
│       ├── application.properties        # 应用配置（Properties格式）
│       ├── application.yml               # 应用配置（YAML格式）
│       ├── application-dev.yml           # 开发环境配置
│       ├── application-prod.yml          # 生产环境配置
│       ├── static/                       # 静态资源（HTML、CSS、JS）
│       └── templates/                    # 视图模板（如Thymeleaf）
└── test/
    ├── java/
    │   └── com/example/app/
    │       ├── controller/               # 控制器测试
    │       ├── service/                  # 服务测试
    │       └── mapper/                   # Mapper测试
    └── resources/
        ├── application-test.yml          # 测试环境配置
        └── test-data/                    # 测试数据文件
```

## 包结构约定

根包名：选择一个有意义的根包名称，必须按照 `com.yourcompany.appname` 格式命名。

**根包名规范：**
- 格式：`com.{company}.{projectname}`
- 示例：`com.example.studentmanagement`、`com.techcorp.ecommerce`
- 要求：使用小写字母，避免使用下划线和连字符
- 建议：使用有意义的公司名和项目名，便于识别和维护

```java

// 基础包结构
com.{company}.{project}.{layer}

// 示例（基于目录结构）
com.example.app.Application                         # 主入口类
com.example.app.config.DatabaseConfig               # 配置类
com.example.app.controller.UserController           # 控制器
com.example.app.service.UserService                 # 服务接口
com.example.app.service.impl.UserServiceImpl        # 服务实现
com.example.app.dao.entity.UserEntity               # MyBatis实体
com.example.app.dao.mapper.UserMapper               # MyBatis Mapper
com.example.app.dto.UserDto                         # 数据传输对象
com.example.app.vo.request.CreateUserRequest        # 请求对象
com.example.app.vo.response.UserResponse            # 响应对象
com.example.app.exception.UserNotFoundException     # 自定义异常
com.example.app.task.ScheduledTask                  # 定时任务
com.example.app.util.DateUtils                      # 工具类
com.example.app.security.JwtUtil                    # 安全工具类

// 示例（当request和response对象比较多时，可以用Domain拆分一层）
com.example.app.vo.request.user.CreateUserRequest
com.example.app.vo.response.user.LoginRequest

// 测试包结构示例
com.example.app.controller.UserControllerTest  # 控制器测试
com.example.app.service.UserServiceTest        # 服务测试
com.example.app.dao.mapper.UserMapperTest      # Mapper测试
```

## 进一步阅读
- 分层规范：
  - `03-code-file-convertions/controller-class-conventions.mdc`
  - `03-code-file-convertions/service-interface-conventions.mdc`、`03-code-file-convertions/service-impl-conventions.mdc`
  - `03-code-file-convertions/mapper-interface-conventions.mdc`
  - `03-code-file-convertions/entity-class-conventions.mdc`
  - `03-code-file-convertions/dto-class-conventions.mdc`
  - `03-code-file-convertions/request-class-conventions.mdc`、`03-code-file-convertions/response-class-conventions.mdc`
  - `03-code-file-convertions/exception-class-conventions.mdc`、`03-code-file-convertions/global-exception-handler-conventions.mdc`
  - `03-code-file-convertions/task-class-conventions.mdc`
  - `03-code-file-convertions/utility-class-conventions.mdc`
  - `03-code-file-convertions/spring-boot-configuration.mdc`
- 基础规则：
  - 命名规范：`02-coding-standards/naming-standards.mdc`
  - 代码风格：`02-coding-standards/code-style-standards.mdc`
  - 编码实践：`02-coding-standards/coding-standards.mdc`

