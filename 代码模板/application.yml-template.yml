# 应用配置文件模板
# 使用说明：
# 1. 复制此模板到 application.yml
# 2. 根据实际需求修改配置项
# 3. 敏感信息使用环境变量
# 4. 可选配置根据项目需求启用

# 应用基础配置
spring:
  application:
    name: {project-name}
  profiles:
    active: dev  # 默认激活开发环境

# 服务器配置
server:
  port: 8080
  servlet:
    context-path: /api
    encoding:
      charset: UTF-8
      force: true
  connection-timeout: 60000
  tomcat:
    max-connections: 10000
    connection-timeout: 60000
    max-threads: 200
    min-spare-threads: 20
    accept-count: 100
    max-http-form-post-size: 2MB
    uri-encoding: UTF-8

# 数据源配置
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/{project_name}?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&useSSL=false
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:password}
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      auto-commit: true
      idle-timeout: 30000
      pool-name: {Project}HikariCP
      max-lifetime: 1800000
      connection-timeout: 30000
      connection-test-query: SELECT 1

# MyBatis 配置
mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.{company}.{project}.dao.entity
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    call-setters-on-nulls: true
    jdbc-type-for-null: 'null'
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

# 日志配置
logging:
  level:
    com.{company}.{project}: DEBUG
    org.springframework: WARN
    org.springframework.web: INFO
    org.mybatis: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/{project-name}.log
    max-size: 100MB
    max-history: 30

# Swagger 配置
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
    tryItOutEnabled: true
    filter: true
    displayRequestDuration: true
    displayOperationId: true
    showExtensions: true
    showCommonExtensions: true

# 文件上传配置
spring:
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
      file-size-threshold: 2KB

# 国际化配置
spring:
  messages:
    basename: i18n/messages
    encoding: UTF-8
    cache-duration: 3600s

# 开发环境配置
---
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:mysql://localhost:3306/{project_name}_dev?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&useSSL=false
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:password}

logging:
  level:
    com.{company}.{project}: DEBUG
    org.springframework.web: DEBUG
    org.mybatis: DEBUG

# 测试环境配置
---
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:mysql://localhost:3306/{project_name}_test?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&useSSL=false
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:password}

logging:
  level:
    com.{company}.{project}: INFO
    org.springframework: WARN

# 生产环境配置
---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:{project_name}}?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&useSSL=true
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

logging:
  level:
    com.{company}.{project}: WARN
    org.springframework: WARN
    root: WARN

# ===========================================
# 可选配置（根据项目需求启用）
# ===========================================

# 消息队列配置（需要异步处理时启用）
# spring:
#   rabbitmq:
#     host: ${RABBITMQ_HOST:localhost}
#     port: ${RABBITMQ_PORT:5672}
#     username: ${RABBITMQ_USERNAME:guest}
#     password: ${RABBITMQ_PASSWORD:guest}
#     virtual-host: ${RABBITMQ_VHOST:/}
#     connection-timeout: 15000
#     publisher-confirm-type: correlated
#     publisher-returns: true
#     template:
#       mandatory: true
#     listener:
#       simple:
#         acknowledge-mode: manual
#         retry:
#           enabled: true
#           max-attempts: 3
#           initial-interval: 1000
#           max-interval: 10000
#           multiplier: 2

# 缓存配置（需要缓存时启用）
# spring:
#   cache:
#     type: redis
#     redis:
#       time-to-live: 600000
#       cache-null-values: false
#       key-prefix: "{project}:"
#       use-key-prefix: true

# Redis 配置（需要缓存或会话存储时启用）
# spring:
#   redis:
#     host: ${REDIS_HOST:localhost}
#     port: ${REDIS_PORT:6379}
#     password: ${REDIS_PASSWORD:}
#     database: ${REDIS_DATABASE:0}
#     timeout: 2000ms
#     lettuce:
#       pool:
#         max-active: 8
#         max-wait: -1ms
#         max-idle: 8
#         min-idle: 0

# 工作流引擎配置（需要审批流程时启用）
# activiti:
#   database-schema-update: true
#   history-level: full
#   check-process-definitions: true
#   process-definition-cache-limit: 1
#   process-definition-cache-limit: 1
#   bpmn-xml-valid: true
#   jpa:
#     enabled: false
#     handle-transaction: true
#     close-entity-manager: true

# 搜索引擎配置（需要全文搜索时启用）
# spring:
#   elasticsearch:
#     rest:
#       uris: ${ELASTICSEARCH_URL:http://localhost:9200}
#       username: ${ELASTICSEARCH_USERNAME:}
#       password: ${ELASTICSEARCH_PASSWORD:}
#       connection-timeout: 5s
#       read-timeout: 30s

# 监控配置（需要监控时启用）
# management:
#   endpoints:
#     web:
#       exposure:
#         include: health,info,metrics,prometheus
#   endpoint:
#     health:
#       show-details: always
#   metrics:
#     export:
#       prometheus:
#         enabled: true